input PaginationParams {  
  offset: Int!
  limit: Int!
  sortBy: String!
  sortDirection: String!
  fromDate: String!
  toDate: String! 
  appId: Int
  whereTags: [Int]
  whereAuthors: [Int]
  whereCategories: [Int]
  whereHashtag: [Int]
  tagged: Boolean
  userTagged: Boolean
  commented: Boolean
  watchlisted: Boolean
  categoryized: Boolean
  authored: Boolean
  userAdded: Boolean
  bookmarked:  Boolean
}

input FilterParams {
  appId: Int!
  fromDate: String
  toDate: String
  whereTags: [Int]
  whereAuthors: [Int]
  whereCategories: [Int]
  whereHashtag: [Int]
  tagged: Boolean
  userTagged: Boolean
  commented: Boolean
  watchlisted: Boolean
  categoryized: Boolean
  authored: Boolean
  userAdded: Boolean
  bookmarked: Boolean
}

input IdParams {
  itemId: Int!
}

input UpdateBoolInput {
  item_id: Int!
  val: Boolean!
  jwtok: String
}

input ArticleCategoryMutation {
  article_id: Int!
  category_id: Int!
  user_id: Int!
  jwtok: String
}

input ArticleWatchlistMutation {
  article_id: Int!
  watchlist_id: Int!
  user_id: Int!
  jwtok: String
}

input TagWatchlistMutation {
  tag_id: Int!
  watchlist_id: Int!
  user_id: Int!
  jwtok: String
}

input AuthorWatchlistMutation {
  author_id: Int!
  watchlist_id: Int!
  user_id: Int!
}

input ArticleTagMutation {
  article_id: Int!
  tag_id: Int!
  user_id: Int!
}

input ArticleColorMutation {
  article_id: Int
  color: String
  jwtok: String
}

type Query {
  paginatedArticles(params: PaginationParams): PaginatedArticles!
  paginatedComments(params: PaginationParams): PaginatedComments!
  paginatedTags(params: PaginationParams):  PaginatedTags!
  paginatedAuthors(params: PaginationParams):  PaginatedAuthors!
  articles(offset: Int!, limit: Int!): [Article!]!
  article(article_id: ID!): Article!
  authors(params: FilterParams): [Author!]!
  author(author_id: ID!): Author!
  category(category_id: ID!): Category!
  tags(params: FilterParams): [Tag!]!
  comments(params: FilterParams): [Comment!]!
  coins:[Coin!]!
  categories(params: FilterParams): [Category!]!
  watchlists(params: FilterParams): [Watchlist!]!
  users:[User!]!
  rssSources(params:FilterParams): [Source!]!
  appCounts(params:FilterParams): AppCounts!
  tag(params: IdParams): Tag
}

type Mutation {
  createArticle(input: ArticleInput): Article
  createComment(input: CommentInput): Comment
  createTestComment(text: String): Comment
  bookmarkArticle(input: UpdateBoolInput): Article 
  deleteArticlez(input: UpdateBoolInput): Article
  createCategory(input: CategoryInput): Category
  createWatchlist(input: WatchlistInput): Watchlist
  createTag(input: TagInput): Tag
  createAuthor(input: AuthorInput): Author
  setWatchlistArticle(input: ArticleWatchlistMutation): Article
  deleteWatchlistArticle(input: ArticleWatchlistMutation): Article
  setCategoriseArticle(input: ArticleCategoryMutation): Article
  setArticleTag(input: ArticleTagMutation): Article
  unsetArticleTag(input: ArticleTagMutation): Article
  setWatchlistTag(input: TagWatchlistMutation): Tag
  deleteWatchlistTag(input: TagWatchlistMutation): Tag
  setWatchlistAuthor(input: AuthorWatchlistMutation): Author
  deleteWatchlistAuthor(input: AuthorWatchlistMutation): Author
  setArticleBg(input: ArticleColorMutation): Article!
}
# ---- sources

type Source {
  source_id: ID!
  source_url: String!
  source_type: String!
}

# ---- articles 

type Article {
  article_id: ID!
  article_title: String!
  article_link: String!
  article_datepub: String!
  article_content: String
  article_description: String
  article_bookmark: Boolean
  article_delete: Boolean
  article_origin: String
  article_bg: String
  app_id: Int
  author: Author 
  tags: [Tag]
  comments: [Comment]
  watchlists: [Watchlist]
  category: Category
}

input ArticleInput {
  article_id: Int
  article_title: String!
  article_description: String!
  article_link: String!
  author_id: Int!
  app_id: Int!
  jwtok: String
}

type PaginatedArticles {
  recordsCount: Int!
  articles: [Article]!
}

# ---- authors 

type Author {
  author_id: ID!
  author_name: String!
  articles: [Article]
  watchlists: [Watchlist]
  articles_count: Int
}

type PaginatedAuthors {
  recordsCount: Int!
  authors: [Author]!
}

input AuthorInput {
  author_name: String!
  jwtok: String
}


# ---- categories 

type Category {
  category_id: ID!
  category_name: String!
  user: User!
  articles: [Article]
  articles_count: Int
  app_id: Int!
}

input CategoryInput {
  category_id: Int
  category_name: String!
  user_id: Int!
  appId: Int!
  jwtok: String
}



# ---- tags

type Tag {
  tag_id: ID!
  tag_name: String!
  tag_origin: String!
  articles: [Article]
  watchlists: [Watchlist]
  # category: Category
  articles_count: Int
  app_id: Int!
}

type PaginatedTags {
  recordsCount: Int!
  tags: [Tag]!
}

input TagInput {
  tag_name: String!
  tag_origin: String!
  app_id: Int!
  jwtok: String
}

# ---- users

type User {
  user_id: ID!
  user_name: String
  user_email: String
}

# type PaginatedUsers {
#   recordsCount: Int!
#   users: [User]!
# }

# input UserInput {
#   user_name: String
#   user_email: String
# }

# # ---- comments

type Comment {
  comment_id: ID!
  comment_text: String 
  user: User
  article: Article
}

type PaginatedComments {
  recordsCount: Int!
  comments: [Comment]!
}

input CommentInput {
  comment_text: String!
  user_id: Int!
  article_id: Int!
  jwtok: String
}

type Watchlist {
  watchlist_id: Int!
  watchlist_name: String!
  watchlist_delete: Boolean!
  user: User!
  tags: [Tag]
  authors: [Author]
  coins: [Coin]
  articles: [Article]
  app_id: Int!
}

input WatchlistInput {
  watchlist_id: Int
  watchlist_name: String
  user_id: Int!
  app_id: Int!
  jwtok: String
}


# # ---- coins

type Coin {
  coin_id: Int
  coin_name: String
  coin_ticker: String
  watchlists: [Watchlist]
}

# # ---- coinprices

# type Coinprice {}

type AppCounts {
  tags_counts: Int
} 


# UpdateBoolInput
# ArticleCategoryMutation
# ArticleWatchlistMutation
# TagWatchlistMutation
# CategoryInput
# ArticleColorMutation
# ArticleInput
# AuthorInput
# CategoryInput
# TagInput
# CommentInput
# WatchlistInput